{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/components/access/access-routing.module.ts","./src/app/core/components/access/access.component.ts","./src/app/core/components/access/access.component.html","./src/app/core/components/access/access.module.ts","./src/app/core/components/cuenta/cuenta.component.ts","./src/app/core/components/cuenta/cuenta.component.html","./src/app/core/components/register/register-routing.module.ts","./src/app/core/components/register/register.component.ts","./src/app/core/components/register/register.component.html","./src/app/core/components/register/register.module.ts","./src/app/core/guards/guardian-access.guard.ts","./src/app/core/services/api.service.ts","./src/app/layout/principal/principal.component.html","./src/app/layout/principal/principal.component.ts","./src/app/share/components/banner/banner.component.ts","./src/app/share/components/banner/banner.component.html","./src/app/share/components/footer/footer.component.ts","./src/app/share/components/footer/footer.component.html","./src/app/share/share.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PrincipalComponent } from './layout/principal/principal.component';\r\n\r\nimport { AccessComponent } from './core/components/access/access.component';\r\nimport { RegisterComponent } from './core/components/register/register.component';\r\n\r\nimport { CuentaComponent } from './core/components/cuenta/cuenta.component';\r\n\r\nimport { GuardianAccessGuard } from './core/guards/guardian-access.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: PrincipalComponent\r\n  },\r\n  {\r\n    path:'access',\r\n    component: AccessComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path:'cuenta/:id',\r\n    canActivate: [GuardianAccessGuard],\r\n    component: CuentaComponent\r\n  },\r\n  {\r\n    path: 'Admin',\r\n    loadChildren : ()=> import('./core/components/admin/admin.module').then(m=>m.AdminModule)\r\n  }\r\n  // {\r\n  //   path:'menuComponent',\r\n  //   component: MenuComponent\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'tecnofactory';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ShareModule } from './share/share.module';\r\nimport { RegisterModule } from './core/components/register/register.module'\r\nimport { AccessModule } from './core/components/access/access.module'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PrincipalComponent } from './layout/principal/principal.component';\r\nimport { CuentaComponent } from './core/components/cuenta/cuenta.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PrincipalComponent,\r\n    CuentaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ShareModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    AccessModule,\r\n    RegisterModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccessRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { usuarios } from '../../models/galeria.models';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-access',\r\n  templateUrl: './access.component.html',\r\n  styleUrls: ['./access.component.scss']\r\n})\r\nexport class AccessComponent implements OnInit {\r\n\r\n  registro : usuarios; \r\n  public registros;\r\n\r\n  constructor( private apiService: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  crearUsuario(){\r\n    this.apiService.loginAcount()\r\n    .subscribe(newUserX=>{\r\n      var registros= newUserX;\r\n      console.log(newUserX);\r\n      console.log(\"aca\")\r\n      console.log(registros['name']);\r\n    })\r\n    alert(\"usuario create\");\r\n  }\r\n\r\n  formularioLogin = new FormGroup({\r\n    email : new FormControl(\"\", [\r\n      Validators.required, \r\n      Validators.email,\r\n      Validators.minLength(5),\r\n      Validators.maxLength(100)]),\r\n    password : new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)])\r\n  })\r\n\r\n}\r\n","<div class=\"access\">\r\n    <img src=\"../../../assets/imgGeneral/access2.jpg\">\r\n</div>\r\n\r\n<div class=\"form_access\">\r\n    <p>SIGN IN WITH YOUR EMAIL</p>\r\n    <img src=\"../../../assets/imgGeneral/access.jpg\">\r\n    <form [formGroup]='formularioLogin'>\r\n        <div class=\"mb-3\">\r\n            <input \r\n            [class.is-invalid]=\"formularioLogin.get('email').touched && formularioLogin.get('email').invalid\"\r\n            type=\"email\" \r\n            class=\"form-control\" \r\n            id=\"exampleInputEmail1\" \r\n            aria-describedby=\"emailHelp\" \r\n            placeholder=\"Email address characteres(5, 100) \" \r\n            formControlName=\"email\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <input \r\n            [class.is-invalid]=\"formularioLogin.get('password').touched && formularioLogin.get('password').invalid\"\r\n            type=\"password\" \r\n            class=\"form-control\" \r\n            id=\"exampleInputPassword1\" \r\n            placeholder=\"Password min characteres= 4\" \r\n            formControlName=\"password\">\r\n        </div>\r\n        <div class=\"mb-3 form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n            <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n        </div>\r\n        <button \r\n        (click)=\"crearUsuario()\"\r\n        [disabled]=\"formularioLogin.invalid\" \r\n        type=\"submit\" \r\n        class=\"btn btn-primary\">Sing in</button>\r\n    </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AccessRoutingModule } from './access-routing.module';\r\nimport { AccessComponent } from './access.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccessComponent\r\n  ],\r\n  exports:[\r\n    AccessComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AccessRoutingModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class AccessModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService} from '../../services/api.service';\r\nimport { usuarios } from '../../models/galeria.models';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cuenta',\r\n  templateUrl: './cuenta.component.html',\r\n  styleUrls: ['./cuenta.component.scss']\r\n})\r\nexport class CuentaComponent implements OnInit {\r\n\r\n  lista_Usuarios: usuarios[]= [];\r\n\r\n  constructor(private apiService: ApiService, private route: ActivatedRoute ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchGetUsers();\r\n  }\r\n\r\n  fetchGetUsers(){\r\n    this.route.params.subscribe((params: Params)=>{\r\n      console.log(params);\r\n      const interar = params.id;\r\n      console.log(interar);\r\n      this.apiService.getXUser(interar)\r\n      .subscribe(userX=>{\r\n        this.lista_Usuarios=userX;\r\n        console.log(userX)\r\n      });\r\n    });\r\n  }\r\n\r\n  updateUsers(){\r\n    const editUser: Partial<usuarios>={\r\n      name : \"cambioNombre\",\r\n      identification  : \"cambioIdentification\"\r\n    }\r\n    this.apiService.updateUser('2',editUser)\r\n    .subscribe(editUser=>{\r\n      console.log(editUser)\r\n    });\r\n  }\r\n\r\n  crearUsuario(){\r\n    const newUser: usuarios = {\r\n      name : \"newUser\",\r\n      identification  : \"newIdentification\",\r\n      email : \"newEmail@gmail.com\",\r\n      password : \"cla000\",\r\n    }\r\n    this.apiService.createUser(newUser)\r\n    .subscribe(newUserX=>{\r\n      console.log(newUserX);\r\n    })\r\n    console.log(\"vas a crear usuarios\");\r\n  }\r\n}\r\n","<p>Bienvenido {{lista_Usuarios[\"name\"]}}</p>\r\n<ul>\r\n    <li>\r\n        <p>id : {{lista_Usuarios[\"id\"]}}</p>\r\n        <p>primernombre : {{lista_Usuarios[\"name\"]}}</p>\r\n        <p>segundonombre : {{lista_Usuarios[\"identitication\"]}}</p>\r\n        <p>correo : {{lista_Usuarios[\"email\"]}}</p>\r\n        <p>clave : {{lista_Usuarios[\"password\"]}}</p>\r\n        <button (click)=\"updateUsers()\">Editar</button>\r\n    </li>\r\n</ul>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AccessComponent } from '../access/access.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n  path:'access',\r\n  component: AccessComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegisterRoutingModule { } \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor( private apiService: ApiService ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n/*\r\n  crearUsuario(){\r\n    this.apiService.createUser(this.miformulario.value)\r\n    .subscribe(newUserX=>{\r\n      console.log(newUserX);\r\n    })\r\n    alert(\"usuario create\");\r\n  }*/\r\n\r\n  miformulario = new FormGroup({\r\n    name : new FormControl('',Validators.required),\r\n    identification : new FormControl('',Validators.required),\r\n    email : new FormControl('',[\r\n      Validators.email,\r\n      Validators.required,\r\n      Validators.minLength(5),\r\n      Validators.maxLength(100)]),\r\n    password : new FormControl('',\r\n    [Validators.required,\r\n    Validators.minLength(4)])\r\n  })\r\n\r\n  validar(){\r\n    alert(\"enviar a ingreso\");\r\n  }\r\n}\r\n","<div class=\"access\">\r\n    <img src=\"../../../assets/imgGeneral/register2.jpeg\">\r\n</div>\r\n\r\n<div class=\"form_access\">\r\n        <p>CREATE YOUR ACCOUNT</p>\r\n        <img src=\"../../../assets/imgGeneral/register.jpg\">\r\n    <form [formGroup]='miformulario'>\r\n        <div class=\"mb-3\">\r\n            <input\r\n            [class.is-invalid]=\"miformulario.get('name').touched && miformulario.get('name').invalid\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"Name\"\r\n            formControlName=\"name\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <input\r\n            [class.is-invalid]=\"miformulario.get('identification').touched && miformulario.get('identification').invalid\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"identification\"\r\n            formControlName=\"identification\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <input\r\n            [class.is-invalid]=\"miformulario.get('email').touched && miformulario.get('email').invalid\"\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            placeholder=\"Email address characteres(5, 100) \"\r\n            formControlName=\"email\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <input\r\n            [class.is-invalid]=\"miformulario.get('password').touched && miformulario.get('password').invalid\"\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            placeholder=\"Password min characteres= 4\"\r\n            formControlName=\"password\">\r\n        </div>\r\n        <div class=\"mb-3 form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n            <label class=\"form-check-label\" for=\"exampleCheck1\">Acept term and Privacy Policy</label>\r\n        </div>\r\n        <!-- <button\r\n        (click)=\"crearUsuario()\"\r\n        [disabled]=\"miformulario.invalid\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary\">CREATE ACCOUNT</button> -->\r\n    </form><br>\r\n    <button\r\n        routerLink=\"/access\"\r\n        (click)=\"validar()\"\r\n        type=\"submit\"\r\n        class=\"btn btn-primary\">CONFIRM ACCESS</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { RegisterRoutingModule } from './register-routing.module';\r\nimport { RegisterComponent } from './register.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent\r\n  ],\r\n  exports:[],\r\n  imports: [\r\n    CommonModule,\r\n    RegisterRoutingModule,\r\n    ReactiveFormsModule \r\n  ]\r\n})\r\nexport class RegisterModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuardianAccessGuard implements CanActivate {\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { usuarios } from '../models/galeria.models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  getAllCharacters (){\r\n    return this.http.get<any>(environment.Url_apiMarvel);\r\n  }\r\n\r\n  getXUser(id: string){\r\n    return this.http.get<usuarios[]>(environment.Url_apiBD+ \"/\" + id);\r\n  }\r\n\r\n  createUser(user: usuarios){\r\n    return this.http.post(environment.Url_apiBD+ \"save\",user);\r\n  }\r\n\r\n  updateUser(id: string, changes: Partial<usuarios>){\r\n    return this.http.put<usuarios[]>(environment.Url_apiBD + id, changes);\r\n  }\r\n\r\n  loginAcount(){\r\n    return this.http.get<usuarios[]>(environment.Url_apiBD+ \"/todos\");\r\n  }\r\n\r\n}\r\n","<app-banner (salida)=\"leerdesdebanner($event)\"></app-banner>\r\n\r\n<!-- <div class=\"pintar\">\r\n    <p>{{var_seccion}}</p>\r\n</div> -->\r\n\r\n<div class=\"carousel\">\r\n    <div class=\"carousel__container\">\r\n        <div \r\n        *ngFor=\"let i of menus\" \r\n        class=\"carousel-item\">\r\n            <img \r\n            class=\"carousel-item__img\" \r\n            src=\"{{i.thumbnail.path}}.{{i.thumbnail.extension}}\">\r\n            <div class=\"carousel-item__details\">\r\n                <div>\r\n                    <img class=\"carousel-item__details--img\" \r\n                    src=\"../../../assets/imgGeneral/plus-icon.png\" a\r\n                    lt=\"Plus Icon\"> \r\n                </div>\r\n                <p class=\"carousel-item__details--title\">{{i.name}}</p>\r\n                <p class=\"carousel-item__details--subtitle\">{{i.description | slice:0:50}}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"img\">\r\n</div>\r\n\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\nimport { galeria } from '../../core/models/galeria.models';\r\nimport { ApiService } from '../../core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-principal',\r\n  templateUrl: './principal.component.html',\r\n  styleUrls: ['./principal.component.scss']\r\n})\r\nexport class PrincipalComponent implements OnInit {\r\n\r\n  public var_seccion: string;\r\n  lista_galeria: galeria[]= [];\r\n  public menus;\r\n\r\n  constructor( private apiService: ApiService ) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCharacters();\r\n  }\r\n\r\n  leerdesdebanner(variable){\r\n    if(variable==\"salidaDeCampo\"){\r\n      this.var_seccion=\"salio de la zona\";\r\n    }else{\r\n      this.var_seccion=variable;\r\n    }\r\n  }\r\n\r\n  getCharacters(){\r\n    this.apiService.getAllCharacters()\r\n    .subscribe( characters=>{\r\n      var mientras= characters.data.results;\r\n      console.log(characters.data.results);\r\n      this.menus = mientras;\r\n      console.log(this.menus);\r\n    })\r\n  }\r\n}\r\n","import { \r\n  Component, \r\n  OnInit,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n// import { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.scss']\r\n})\r\nexport class BannerComponent implements OnInit {\r\n\r\n  @Output() salida:EventEmitter<string>= new EventEmitter();\r\n\r\n  menu=[];\r\n  public salidaDeCampo : string;\r\n\r\n  constructor(\r\n    // private router:Router\r\n    ) {\r\n    this.menu= [\"Characters\", \"Comics\", \"Movies\"];\r\n    this.salidaDeCampo= \"fuera\";\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  seleccion(valor: string){\r\n    this.salida.emit(valor);\r\n  }\r\n\r\n  menu2(valor: string ){\r\n    if(valor==\"Characters\"){\r\n      // this.router.navigate([\"menuComponent\"]);\r\n      console.log(\"has dado en Characters\");\r\n    }\r\n    if(valor==\"Comics\"){\r\n      // this.router.navigate([\"menuComponent\"]);\r\n      console.log(\"has dado en Comics\");\r\n    }\r\n    if(valor==\"Movies\"){\r\n      // this.router.navigate([\"menuComponent\"]);\r\n      console.log(\"has dado en Movies\");\r\n    }\r\n      console.log(\"mensaje de prueba de click \"+ valor);\r\n  }\r\n\r\n}\r\n","<div class=\"containerBanner\">\r\n    <div class=\"login\">\r\n        <ul\r\n            class=\"navbar-nav\">\r\n            <li\r\n                class=\"nav-item\">\r\n                <a\r\n                    class=\"navbar-brand\"\r\n                    routerLink=\"access\">Sing inn\r\n                </a>\r\n            </li>\r\n            <li\r\n                class=\"nav-item\">\r\n                <a\r\n                    class=\"navbar-brand\"\r\n                    routerLink=\"register\">Join\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div>\r\n        <div class=\"menu\">\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div class=\"container-fluid\">\r\n                    <button\r\n                        class=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarNav\"\r\n                        aria-controls=\"navbarNav\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\">\r\n                        <span\r\n                            class=\"navbar-toggler-icon\">\r\n                        </span>\r\n                    </button>\r\n                <div\r\n                    class=\"collapse navbar-collapse\"\r\n                    id=\"navbarNav\">\r\n                    <ul *ngFor='let i of menu'\r\n                        class=\"navbar-nav\">\r\n                        <li\r\n                            class=\"nav-item\">\r\n                            <a\r\n                                class=\"navbar-brand\"\r\n                                (mouseover)=\"seleccion(i)\"\r\n                                (mouseout)=\"seleccion(salidaDeCampo)\">{{i}}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"containerFooter\">\r\n    <section>\r\n        <picture> \r\n            <!-- <source media=\"(min-width:1300px)\" srcset=\"Imagenlarge\">\r\n            <source media=\"(min-width:1000px)\" srcset=\"ImageMedium\"> -->\r\n            <img src=\"assets/imgFooter/marvel.jpg\" alt=\"Marvel\" title=\"Marvel\">\r\n            <figcaption>Pagos Onlie</figcaption>\r\n        </picture>\r\n    </section>\r\n    \r\n    <section>\r\n        <p>ABOUT MARVEL</p>\r\n        <p>HELP/FAQS</p>\r\n        <p>CAREERS</p>\r\n        <p>INTERNSHIPS</p>\r\n    </section>\r\n\r\n    <section>\r\n        <p>ADVERTISING</p>\r\n        <p>DISNEY+</p>\r\n        <p>MARVELHQ.COM</p>\r\n        <p>REDEEM DIGITAL COMICS</p>\r\n    </section>\r\n\r\n    <section>\r\n        <p>IMAGEN 1</p>\r\n        <p>IMAGEN 2</p>\r\n    </section>\r\n\r\n    <section>\r\n        <h2>FOLLOW MARVEL</h2>\r\n        <p>IMAGEN 1</p>\r\n        <p>IMAGEN 2</p>\r\n    </section>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { BannerComponent } from './components/banner/banner.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\n\r\n@NgModule({\r\n    declarations:[\r\n        BannerComponent,\r\n        FooterComponent,\r\n    ],\r\n    exports:[\r\n        CommonModule,\r\n        BannerComponent,\r\n        FooterComponent,\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        RouterModule\r\n    ]\r\n})\r\n\r\nexport class ShareModule {}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  Url_apiMarvel : 'https://gateway.marvel.com/v1/public/characters?ts=1&apikey=d165ebdf45a5d723c1ad698d3db167c1&hash=69d5b299962d000cb0326f675e749f86',\r\n  Url_apiBD : 'https://backendtecnofactory1.herokuapp.com/api/User/'\r\n\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","PrincipalComponent","AccessComponent","RegisterComponent","CuentaComponent","GuardianAccessGuard","routes","path","component","canActivate","loadChildren","then","m","AdminModule","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","HttpClientModule","ReactiveFormsModule","ShareModule","RegisterModule","AccessModule","BrowserAnimationsModule","AppModule","bootstrap","declarations","AccessRoutingModule","forChild","FormControl","FormGroup","Validators","apiService","formularioLogin","email","required","minLength","maxLength","password","ngOnInit","crearUsuario","loginAcount","subscribe","newUserX","registros","console","log","alert","ɵɵdirectiveInject","ApiService","consts","AccessComponent_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵlistener","AccessComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","ɵɵclassProp","get","touched","invalid","CommonModule","route","lista_Usuarios","fetchGetUsers","params","interar","id","getXUser","userX","updateUsers","editUser","name","identification","updateUser","newUser","createUser","i2","ActivatedRoute","CuentaComponent_Template","CuentaComponent_Template_button_click_14_listener","ɵɵtextInterpolate1","RegisterRoutingModule","miformulario","validar","RegisterComponent_Template","RegisterComponent_Template_button_click_20_listener","state","factory","ɵfac","providedIn","environment","http","getAllCharacters","Url_apiMarvel","Url_apiBD","user","post","changes","put","ɵɵinject","HttpClient","ɵɵpropertyInterpolate2","i_r1","thumbnail","extension","ɵɵsanitizeUrl","ɵɵtextInterpolate","ɵɵpipeBind3","description","lista_galeria","getCharacters","leerdesdebanner","variable","var_seccion","characters","mientras","data","results","menus","PrincipalComponent_Template","PrincipalComponent_Template_app_banner_salida_0_listener","$event","ɵɵtemplate","PrincipalComponent_div_3_Template","EventEmitter","BannerComponent_ul_16_Template_a_mouseover_2_listener","restoredCtx","ɵɵrestoreView","_r3","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","seleccion","BannerComponent_ul_16_Template_a_mouseout_2_listener","ctx_r4","salidaDeCampo","BannerComponent","salida","menu","valor","emit","menu2","outputs","BannerComponent_Template","BannerComponent_ul_16_Template","FooterComponent","FooterComponent_Template","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}